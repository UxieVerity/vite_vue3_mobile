1、配置：plugins/svgload.config.js（第三方插件，默认是禁用的：见vtie.config.js的配置svgloadConfig.config(false) ）
缺点是：是一次性加载所有的svg；目前没有找到 按需加载的插件； 处于禁用状态。
      如需要开启:1)修改vtie.config.js 中 svgloadConfig.config(true) ）
               2)修改plugins-libs.js中 app.config.globalProperties.$useSvgLoad=false

2、按需动态加载：
使用 import() 函数异步加载 （i18n语言切换以及echarts的主题切换以及按需加载都是 这种写法）
优化；将import() 换成了 import.meta.glob()


注意：svg-load.js里写法  (注意这里import的参数) 。
    eg: await import(`../../svg/${name}.js`).catch(err=>{ })

    const svgs = import.meta.glob(['../../assets/svg/*.svg','../../assets/svg/main/*.svg'], { as: 'raw' })
重点：都只能是一级目录，无法多级目录，因为glob可以用数组一次性 倒入，所以改成了glob
   glob返回的 是字典 key是路径，value是 promise

判断import是否有效（参考如下）：
在google监视中查看 import()如果转成了__variableDynamicImportRuntimeHelper() 表示import是成功的
svgFile = await import(`../../assets/svg/${name}.svg`).catch(err=>{
            console.log('--svg-load-err--',err)
        })
 svgFile = await __variableDynamicImportRuntimeHelper((/* #__PURE__ */ Object.assign({"../../assets/svg/logo.svg": () => import("/assets/svg/logo.svg?import&raw"),"../../assets/svg/youjiantou.svg": () => import("/assets/svg/youjiantou.svg?import&raw")})), `../../assets/svg/${name}.svg`).catch((err) => {
      console.log('--svg-load-err--', err)
    })
